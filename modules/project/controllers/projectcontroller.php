<?php/* namespace makeMania; */class projectController extends baseController implements IController {	public function __construct() {		parent::__construct();		$this->layout = 'index.phtml';		/* set specific view-layout vars to render */		// Sidebar things common to every project	}	/***************************************************************************	 * PRIVATE METHODS	 **************************************************************************/	/***************************************************************************	 * PUBLIC METHODS - Action mapping	 ***************************************************************************/	// Show the full gallery, clearing session data	function fullgallery( $uri ) {		unset( $_SESSION['query'] );		$this->gallery( $uri );	}	// Show a gallery of projects, either the full set or a subset based on a query	public function gallery( $uri = null ) {		$tpl = new view();		/*** turn caching on for this page ***/		//$tpl->setCaching( true );		$tpl->setTemplateDir( __APP_PATH.'/modules/project/views' );		// Create the detailed project content		$config = config::getInstance();		$this->view->config = $config = config::getInstance();		$this->view->version = $config->config_values['application']['version'];		$this->view->sidebarimage = null;		$this->view->logout = isset( $_SESSION['member'] ) ? "<a href='account/logout'>logout</a>" : null;		$this->view->title = $config->config_values['application']['site_name']." :: Project Gallery";		$this->view->fbAdmins = $config->config_values['facebook']['admins'];		$this->view->fbPageContent = $config->config_values['facebook']['pagecontent'];		$this->view->fbPageTitle = $config->config_values['facebook']['pagetitle'];		try {			// Set variables used by this controller's view			//echo "<pre>".print_r( project::fn_getProjectCollection( 1, 20 ), true )."</pre>\n";			$curr_page = $uri->fragment( 2 ) > 0 ? $uri->fragment( 2 ) : 1;			$items_per_page = $config->config_values['pagination']['items_per_page'];			$tpl->__set( 'fbLikeButton', $config->config_values['facebook']['like'] );			if( !empty( $_SESSION['query'] ) )				$_REQUEST['query'] = $_SESSION['query'];			if( isset( $_REQUEST['query'] ) )				$collection = project::fn_getSearchProjectCollection( $_REQUEST['query'], $curr_page, $items_per_page, $num_pages );			else				$collection = project::fn_getProjectCollection( $curr_page, $items_per_page, $num_pages );			$tpl->__set( 'collection', $collection );			$tpl->__set( 'page_number_menu', utils::makePageNumberMenu( $curr_page, $num_pages ) );		} catch( Exception $e ) {			$ec = new error404Controller();			return $ec->index( $e );		}		/*** the cache id is based on the file name ***/		$cache_id = md5( 'project/gallery.php' );		/*** fetch the template (becomes $content in the layout template) ***/		$this->content = $tpl->fetch( 'gallery.phtml', $cache_id );	}	// Show a single project on the page.  This is the view we use for Facebook links because it	//	doesn't use a lightbox.	public function projectview( $uri = null ) {		if( $uri->fragment( 2 ) != null ) {//			$this->layout = 'lightbox.phtml';			$tpl = new view();			/*** turn caching on for this page ***/			//$tpl->setCaching( true );			$tpl->setTemplateDir( __APP_PATH.'/modules/project/views' );			// Create the detailed project content			$config = config::getInstance();			$this->view->config = $config = config::getInstance();			$this->view->version = $config->config_values['application']['version'];			$this->view->sidebarimage = null;			$this->view->logout = null;			try {				// Set variables used by this controller's view				$project = new project( $uri->fragment( 2 ) );				$this->view->title = $config->config_values['application']['site_name']." :: {$project->fn_getTitle()}";				$tpl->__set( 'project', $project );				$tpl->__set( 'images', $project->fn_getImages() );				$tpl->__set( 'PROJECT_URL', "{$config->config_values['images']['PROJECT_URL']}/{$project->fn_getProjectID()}" );				$tpl->__set( 'fbLikeButton', $config->config_values['facebook']['like'] );				// Set variables used by this layout (NOT the controller's view)				$tpl->__set( 'start_frame', $project->fn_getMainImageIndex() + 1 );			} catch( Exception $e ) {				$ec = new error404Controller();				return $ec->index( $e );			}			/*** the cache id is based on the file name ***/			$cache_id = md5( 'project/index.php' );			/*** fetch the template (becomes $content in the layout template) ***/			$this->content = $tpl->fetch( 'projectview.phtml', $cache_id );		} else {			$e = new Exception( 'Missing project ID' );			$ec = new error404Controller();			return $ec->index( $e );		}	}	function search( $uri ) {		// An empty search clears session data, but we'll save a non-empty search		//	until the viewer gets the full gallery again.		if( !empty( $_REQUEST['query'] ) )			$_SESSION['query'] = $_REQUEST['query'];		else			unset( $_SESSION['query'] );		$this->gallery( $uri );	}		// View a single project.  This is most likely going to be shown in a lightbox,	//	but we're not making that assumption here.  Use the layout to customize for	//	a lightbox vs. full page.	public function view( $uri = null ) {		if( $uri->fragment( 2 ) != null ) {			$this->layout = 'lightbox.phtml';			$tpl = new view();			/*** turn caching on for this page ***/			//$tpl->setCaching( true );			$tpl->setTemplateDir( __APP_PATH.'/modules/project/views' );			// Create the detailed project content			$config = config::getInstance();			$this->view->config = $config = config::getInstance();			$this->view->version = $config->config_values['application']['version'];			$this->view->sidebarimage = null;			try {				// Set variables used by this controller's view				$project = new project( $uri->fragment( 2 ) );				$tpl->__set( 'project', $project );				$tpl->__set( 'images', $project->fn_getImages() );				$tpl->__set( 'PROJECT_URL', "{$config->config_values['images']['PROJECT_URL']}/{$project->fn_getProjectID()}" );				// Set variables used by this layout (NOT the controller's view)				$this->view->__set( 'start_frame', $project->fn_getMainImageIndex() + 1 );			} catch( Exception $e ) {				$ec = new error404Controller();				return $ec->index( $e );			}			/*** the cache id is based on the file name ***/			$cache_id = md5( 'project/index.php' );			/*** fetch the template (becomes $content in the layout template) ***/			$this->content = $tpl->fetch( 'project.phtml', $cache_id );		} else {			$e = new Exception( 'Missing project ID' );			$ec = new error404Controller();			return $ec->index( $e );		}	}}